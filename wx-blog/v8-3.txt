
###V8
2008年9月，V8的第一个版本随着Chrome的第一版发布。
2010年12月，官方公布V8的名为Crankshaft的优化编译器，与原来的Full Compiler一起工作，声称较2008年版本提高50%性能。
2015年7月7日，官方公布又一个新的中为TurBoFan的优化编译器，主要提供ES6的新语法，以及提高性能。并表明该编译器最终目标是全部替代Crankshaft编译器。
2015年7月17日，官方公布集成了TurboFan的V8版本（v4.5)
2015年8月28日，V8发布v4.6版本
2016年3月15日，V8发布v5.0版本
2016年7月18日，V8发布v5.3版本，新增名为Ignition的解析器(Interpreter)，跟原有的优化编译器(Crankshaft and TurboFan)进行串联工作，提供了更加优化的内存使用方案，主要针对于低内存的Android设备，并称在未来会普及到全平台。
2016年9月9日，V8发布v5.4版本
2016年10月24日，V8发布v5.5版本，在5.5版本中开始支持ES7异步函数，这使得编写使用和创建Promise的代码变得更加容易。
2016年12月2日，V8发布v5.6版本，从5.6版本开始，V8可以优化整个JavaScript语言。而且，许多语言功能都是通过V8中的新优化管道发送的。该管道使用V8的Ignition解释器作为基准，并使用V8更强大的TurboFan优化编译器优化经常执行的方法。新的流水线激活了新的语言功能（例如ES2015和ES2016规范中的许多新功能）或Crankshaft（V8的“经典”优化编译器）无法优化某种方法（例如try-catch，with）的情况。
2017年2月6日，V8发布v5.7版本
2017年3月20日，V8发布v5.8版本
2017年4月27日，V8发布v5.9版本，V8 5.9将成为默认启用Ignition + Turbofan的第一个版本。一般来说，这种交换机应该可以降低内存消耗，并且可以更快地启动Web应用程序。
2017年6月9日，V8发布v6.0版本，V8 6.0引入了对SharedArrayBuffer的支持，SharedArrayBuffer是一种在JavaScript工作人员之间共享内存并在工作人员之间同步控制流的低级机制。 SharedArrayBuffers为JavaScript提供了对共享内存，原子和futex的访问。 SharedArrayBuffers还解锁了通过asm.js或WebAssembly将线程化应用程序移植到Web的功能。
2017年8月3日，V8发布v6.1版本
2017年9月11日，V8发布v6.2版本
2017年10月25日，V8发布v6.3版本，改进了速度和内存消耗，详细
2017年12月19日，V8发布v6.4版本，提升了速度和优化内存消耗，详细
2018年2月1日，V8发布v6.5版本，编译速度显著提升，详细
2018年3月27日，V8发布v6.6版本，异步性能大幅提升，详细


#####V8 使用“常量折叠”优化技巧，导致幂（**）运算有时候不等于 Math.pow()




#####使用 D8 分析 javascript 如何被 V8 引擎优化的










#####V8 性能再升级，支持更多 ES2015+ 语法优化






#####开启 V8 对象属性的“fast”模式





#####从 V8 的单元测试源码看“同值相等”



#####Chrome DevTools：在 Profile 性能分析中显示原生 javascript 函数



#####Chromium 新的弹窗机制以及 HTML 的 <dialog> 元素



#####在 Chrome 中 JavaScript 数组到底占用了多少内存？

